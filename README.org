* How to create a github blog, follow me step by step
** 1.搭建本地jekll环境，为什么选择jekll呢，因为jekll简单而且很适合github

搭建方法：(yum 源需要自己配置，系统要有的话GX你，你不用配置了)
a. Jekyll使用动态脚本语言 Ruby 写成。请首先 下载并安装Ruby
b. sudo yum install rubygems
c. Jekyll依赖以下的gems模块： liquid 、 fast-stemmer 、 classifier 、 directory_watcher 、 syntax 、 maruku 、 kramdown 、 posix-spawn 和 albino 。它们会被gem install命令自动安装。
因此你只要执行一下命令即可：
sudo yum install jekll
d. 若要通过 {% highlight %} 标签在帖子中嵌入语法高亮的代码，那么需要安装 Pygments
安装命令(fedora平台):sudo yum install python-pygments
** 2. jekll安装成功后，恭喜你，你可以在本地搭建自己的静态网站
*** 搭建一个Jekyll站点通常包括下面几步：

1. 设定站点的基本结构，使用HTML和Liquid模板语言创建网页布局。
2. 创建一些帖子，或者从你以前的博客平台导入。
3. 在本地测试站点，查看效果。
4.  部署你的网站。
    
*** 基本结构

Jekyll从核心上来说是一个文本转换引擎。该系统内部的工作原理是：你输入一些用自己喜爱的标记语言格式书写的文本，
可以是Markdown、 Textile或纯粹的HTML，（不知道支持不支持emacs org-mode， 要是支持就非常完美了）

一个典型的Jekyll站点通常具有如下结构：

'|-- _config.yml
'|-- _includes
'|-- _layouts
'|    |-- default.html
'|    `-- post.html
'|-- _posts
'|    |-- 2007-10-29-Alex.md
'|    |`-- 2009-04-26-AlexTest2.md
'|-- _site
'|`-- index.html

以下是每部分功能的简述：
`-- index.html

以下是每部分功能的简述：
_config.yml

保存Jekyll配置的文件。虽然绝大部分选项可以通过命令行参数指定，但将它们写入配置文件可以使你在每次执行时不必记住它们。
_includes/

该目录存放可以与_layouts和_posts混合、匹配并重用的文件。Liquid标签{% include file.ext %}可以用于嵌入文件_includes/file.ext。
_layouts/

该目录存放用来插入帖子的网页布局模板。页面布局基于类似博客平台的“一个帖子接一个帖子”的原则，通过YAML前置数据定义。Liquid标签用于在页面上插入帖子的文本内容。
_posts/

该目录下存放的可以说成是你的“动态内容”。这些文件的格式很重要，它们的命名模式必须遵循 YEAR-MONTH-DATE-title.MARKUP 。每一个帖子的固定链接URL可以作弹性的调整，但帖子的发布日期和转换所使用的标记语言会根据且仅根据文件名中的相应部分来识别。
_site/

这里是Jekyll用以存放最终生成站点的根路径位置。也许把它加到你的 .gitignore 列表中会是个不错的主意。
index.html和其他HTML/Markdown/Textile文件

如果一个文件的头部存在YAML前置数据的部分，那么Jekyll将会自动处理转换该文件并传送到站点路径下。这对于站点的根目录或其他任意子目录下的所有 .html 、 .markdown 、 .textile 文件都适用。

** Now, run jekll and adjust your own web page

1. 通常直接在命令行下使用可执行的Ruby脚本 jekyll ，它可以从gem安装。如果要启动一个临时的Web服务器并测试你的Jekyll站点，执行：

2. $ jekyll --server
然后在浏览器中访问 http://localhost:4000 或 http://0.0.0.0:4000 。当然这里还有其他许多参数选项可以使用。

3. base-url选项

   如果你使用了如下的base-url选项

   $ jekyll --server --base-url '/blog'

   那么确保你所访问的站点地址是:

   http://localhost:4000/blog/index.html 仅仅访问

   http://localhost:4000/blog 是不行的

** 部署

由于Jekyll所做的仅仅是生成一个包含HTML等静态网站文件的目录（_site），
它可以通过简单的拷贝（scp）、远程同步（rsync）、ftp上传或git等方式部署到任何Web服务器上, 当然这里是github

关于jekll 更详细的使用方法请google。

** Now, you need to create a new repo as your blog page(eg. aaron123.github.com)
[[http://jekyllbootstrap.com/][Click Here to see how to create your page repo]]

** What you shuld do next?
just update "aaron123.github.com" repo and run jekll to adjust you static web page generated by "aaron123.github.com"

*Last, if you have any good idea about "how to create github blog" please fork this repo,From the people, and benefit of the people*

*Thanks!*

